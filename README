TODO:

next steps:


***
get rid of all calls to eval!!!
(it is not safe)

***
don't require user to figure out which population is indexed where...

either preprocess the input
OR
(
let ms command take in arbitrary variable names with $ sign
have them be passed in as **kwargs
AND
set $ signs for -es populations automatically
to handle -es, whether it has a $pop or not,
use
_es(t,i,p,splitpop=None,**kwargs)
)

***

add back EPSILON to deal with underflow issues in log likelihood

***

add try/except to moran_model.action, to call moran_al_mohy_higham?
seems like trunc0 might still fail occassionally, possibly due to moran action
(or possibly due to something else)

***

make likelihood functions that take in a list of sfs's
and also a Sigma_mle_hat
that takes in same list, and returns the estimated variance of the mle

To compute variances: treat each chromosome/sequence as an independent dataset
Use theory of M/Z-estimators
This also allows for using bootstrap estimation of variance

To compute this efficiently use a hack: define a primitive function
remove_gradient(x)
that returns x, but whose gradient returns 0

This allows to compute E[xdot * xdot] by computing hessian of
E[x*x]/2.0 - (E[x_ * x] + E[x * x_]) / 2.0
where
x_ = remove_gradient(x)

***

GPU support

***

Missing data support

***

archaic DNA support

***
remove all TODO (grep for it)

***

change SCRM_PATH to MS_PATH

***

test what parameter of EPSILON is needed for log_likelihood_prf
(perhaps by starting out optimizer in very unlikely position)

also visually look how many 0s occur, and for what sorts of configs


***
rename test_basinhopping. (turn it into example.py?)

***
Make autodifferentiation work for functional size history
allow functional size history to be passed in with ms style cmd

***
put things into __init__

***
find minimal example test case for autograd issue #24

***
merge some of my_functions into autograd package with pull request

***
for simulate_sfs, make theta=None work when -r is set

(or at least have it raise an exception)

***
add option to simulate from ms instead of scrm

***
store sumCounts, sumSqCounts, nonzeroCounts in a single object?
OR
name it sfs_counts, sq_counts, nonzero_counts instead

***
add back from __future__ import division

***
get rid of Demography.from_newick
get rid of from_newick, to_newick in parse_ms

***
tau = inf in ExponentialHistory currently disabled because it breaks automatic differentiation